{"version":3,"sources":["components/App.js","reportWebVitals.js","index.js"],"names":["App","isEditing","e","state","submit","setState","getInput","input","target","value","preventDefault","length","alert","item","id","Date","getTime","text","isComplete","items","concat","setProgress","isDone","update","map","i","delete","filtered_items","filter","check","progress","Math","floor","local_data","JSON","parse","localStorage","getItem","this","setItem","stringify","className","onSubmit","class","role","style","width","aria-valuenow","aria-valuemin","aria-valuemax","onClick","type","checked","title","onChange","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAoHeA,E,kDA/Gb,aAAe,IAAD,8BACZ,gBAsBFC,UAAY,SAACC,GACR,EAAKC,MAAMF,UACZ,EAAKG,OAAOF,GAGZ,EAAKG,SAAS,CAACJ,WAAW,KA5BhB,EAgCdK,SAAW,SAACJ,GACV,EAAKG,SAAS,CAACE,MAAOL,EAAEM,OAAOC,SAjCnB,EAoCdL,OAAS,SAAAF,GAEP,GADAA,EAAEQ,iBAC6B,IAA5B,EAAKP,MAAMI,MAAMI,OAElB,OADAC,MAAM,wBACC,EAET,IAAMC,EAAO,CAACC,IAAI,IAAIC,MAAOC,UAAWC,KAAM,EAAKd,MAAMI,MAAOW,YAAY,GAC5E,EAAKb,SAAS,CAACc,MAAO,EAAKhB,MAAMgB,MAAMC,OAAOP,GAAON,MAAO,KAAK,kBAAM,EAAKc,YAAY,EAAKlB,MAAMgB,WA3CvF,EA8CdG,OAAS,SAAApB,GACP,IAAIqB,EAAS,EAAKpB,MAAMgB,MAAMK,KAAI,SAAAC,GAIhC,OAHGA,EAAEX,KAAKZ,IACRuB,EAAEP,YAAcO,EAAEP,YAEbO,KAET,EAAKpB,SAAS,CAACc,MAAOI,IAAS,kBAAM,EAAKF,YAAY,EAAKlB,MAAMgB,WArDrD,EAwDdO,OAAS,SAAAxB,GACP,IAAIyB,EAAiB,EAAKxB,MAAMgB,MAAMS,QAAO,SAAAH,GAAC,OAAIA,EAAEX,KAAKZ,KACzD,EAAKG,SAAS,CAACc,MAAOQ,IAAiB,kBAAM,EAAKN,YAAY,EAAKlB,MAAMgB,WA1D7D,EA6DdE,YAAc,SAAAF,GACZ,IAAIU,EAAQV,EAAMS,QAAO,SAAAH,GAAM,OAAOA,EAAEP,cACpCY,EAAYX,EAAMR,OAASoB,KAAKC,MAAOH,EAAMlB,OAASQ,EAAMR,OAAU,KAAM,EAChF,EAAKN,SAAS,CAACyB,SAAUA,KA9DzB,EAAK3B,MAAQ,CACXgB,MAAO,GACPZ,MAAO,GACPN,WAAW,EACX6B,SAAU,GANA,E,qDAUd,WACE,IAAIG,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,UAChC,MAAdJ,IACDK,KAAKjC,SAAS,CAACc,MAAOc,IACtBK,KAAKjC,SAAS,CAACyB,SAAUM,aAAaC,QAAQ,iB,gCAIlD,WACED,aAAaG,QAAQ,QAASL,KAAKM,UAAUF,KAAKnC,MAAMgB,QACxDiB,aAAaG,QAAQ,WAAYD,KAAKnC,MAAM2B,Y,oBA+C9C,WAAU,IAAD,OAEP,EAAmCQ,KAAKnC,MAAjCgB,EAAP,EAAOA,MAAQZ,EAAf,EAAeA,MAAON,EAAtB,EAAsBA,UAEtB,OACE,uBAAMwC,UAAU,YAAYC,SAAUJ,KAAKlC,OAA3C,UAEE,qBAAKuC,MAAM,WAAX,SACE,qBAAKA,MAAM,eAAeC,KAAK,cAAcC,MAAO,CAACC,MAAOR,KAAKnC,MAAM2B,SAAW,KAAMiB,gBAAc,KAAKC,gBAAc,IAAIC,gBAAc,MAA3I,SAAkJX,KAAKnC,MAAM2B,SAAW,QAGvKX,EAAMR,OACLQ,EAAMK,KAAI,SAACC,GACT,OACE,sBAAKgB,UAAU,YAAf,UACE,uBAAMS,QAAS,kBAAM,EAAK5B,OAAOG,EAAEX,KAAnC,UACE,uBAAOqC,KAAK,WAAWC,QAAS3B,EAAEP,aAClC,uBAAOuB,UAAU,OAAjB,SAAyBhB,EAAER,UAG7B,sBAAMwB,UAAU,cAAcY,MAAM,SAASH,QAAS,kBAAM,EAAKxB,OAAOD,EAAEX,KAA1E,SACE,mBAAG2B,UAAU,2BAPehB,EAAEX,OAatC,sBAGDb,EACC,qBAAKwC,UAAU,YAAf,SAA2B,uBAAO3B,GAAG,YAAYwC,SAAUhB,KAAKhC,SAAUG,MAAOF,MAElF,sBAGH,sBAAKO,GAAG,WAAWoC,QAASZ,KAAKrC,UAAjC,UACE,mBAAGwC,UAAU,eADf,6B,GAzGUc,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d93521b0.chunk.js","sourcesContent":["import React,{Component} from \"react\";\nimport '../styles/App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      input: \"\",\n      isEditing: false,\n      progress: 0\n    }\n  }\n\n  componentDidMount() {\n    let local_data = JSON.parse(localStorage.getItem(\"items\"));\n    if(local_data != null) {\n      this.setState({items: local_data});\n      this.setState({progress: localStorage.getItem(\"progress\")});\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\"items\", JSON.stringify(this.state.items));\n    localStorage.setItem(\"progress\", this.state.progress);\n  }\n\n  isEditing = (e) => {\n    if(this.state.isEditing) {\n      this.submit(e);\n    }\n    else {\n      this.setState({isEditing: true});\n    }\n  }\n\n  getInput = (e) => {\n    this.setState({input: e.target.value});\n  }\n\n  submit = e => {\n    e.preventDefault();\n    if(this.state.input.length === 0) {\n      alert(\"Pls enter something!\");\n      return 0;\n    }\n    const item = {id: new Date().getTime(), text: this.state.input, isComplete: false};\n    this.setState({items: this.state.items.concat(item), input: \"\"}, () => this.setProgress(this.state.items));\n  }\n\n  isDone = e => {\n    let update = this.state.items.map(i => {\n      if(i.id===e) {\n        i.isComplete = !i.isComplete;\n      }\n      return i;\n    });\n    this.setState({items: update}, () => this.setProgress(this.state.items));\n  }\n\n  delete = e => {\n    let filtered_items = this.state.items.filter(i => i.id!==e);\n    this.setState({items: filtered_items}, () => this.setProgress(this.state.items));\n  }\n\n  setProgress = items => {\n    let check = items.filter(i => {return i.isComplete});\n    let progress = (items.length)? Math.floor((check.length / items.length) * 100): 0;\n    this.setState({progress: progress});\n  }\n\n  render() {\n\n    const {items , input, isEditing} = this.state;\n\n    return (\n      <form className=\"todo-list\" onSubmit={this.submit}>\n\n        <div class=\"progress\">\n          <div class=\"progress-bar\" role=\"progressbar\" style={{width: this.state.progress + \"%\"}} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">{this.state.progress + \"%\"}</div>\n        </div>\n\n        { (items.length)?\n            items.map((i) => {\n              return(\n                <div className=\"todo-wrap\" key={i.id}>\n                  <span onClick={() => this.isDone(i.id)}>\n                    <input type=\"checkbox\" checked={i.isComplete}/>\n                    <label className=\"todo\">{i.text}</label>\n                  </span>\n\n                  <span className=\"delete-item\" title=\"remove\" onClick={() => this.delete(i.id)}>\n                    <i className=\"fa fa-times-circle\"></i>\n                  </span> \n                </div>\n              )\n            })\n            :\n            <p></p>\n        }\n        \n        { (isEditing)?\n            <div className=\"todo-wrap\"><input id=\"input-box\" onChange={this.getInput} value={input}/></div>\n          :\n           <p></p>\n        }\n\n        <div id=\"add-todo\" onClick={this.isEditing}>\n          <i className=\"fa fa-plus\"></i>&nbsp; Add an item\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}